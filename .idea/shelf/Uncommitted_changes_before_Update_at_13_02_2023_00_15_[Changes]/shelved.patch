Index: src/main/java/org/thread/ClientListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.thread;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\npublic class ClientListener implements Runnable {\r\n    private List<ClientRunnable> clientsList;\r\n\r\n    private Socket client;\r\n\r\n    private TaskFactoryInterface taskFactoryInterface;\r\n\r\n    private int port;\r\n\r\n    private boolean isStarted = false;\r\n    private boolean isConnected = false;\r\n\r\n    public ClientListener(TaskFactoryInterface taskFactoryInterface, int port) {\r\n        clientsList = Collections.synchronizedList(new ArrayList<>());\r\n        this.taskFactoryInterface = taskFactoryInterface;\r\n        this.port = port;\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        try (ServerSocket server = new ServerSocket(port)) {\r\n            System.out.println(\"Démarrage du serveur sur l'adresse \" + server.getInetAddress() + \" et le port \" + port);\r\n\r\n            while (true) {\r\n                client = server.accept();\r\n                ClientRunnable runnable = new ClientRunnable(client, taskFactoryInterface);\r\n                clientsList.add(runnable);\r\n                (new Thread(runnable)).start();\r\n            }\r\n\r\n        } catch (IOException exception) {\r\n            exception.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private String readLine(BufferedReader reader) throws IOException {\r\n        String line = reader.readLine();\r\n        if(line != null && line.length() > 2 && line.startsWith(\"\\uFEFF\"))\r\n            return line.substring(\"\\uFEFF\".length());\r\n        return line;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/thread/ClientListener.java b/src/main/java/org/thread/ClientListener.java
--- a/src/main/java/org/thread/ClientListener.java	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ b/src/main/java/org/thread/ClientListener.java	(date 1676243515476)
@@ -1,6 +1,5 @@
 package org.thread;
 
-import java.io.BufferedReader;
 import java.io.IOException;
 import java.net.ServerSocket;
 import java.net.Socket;
@@ -13,16 +12,16 @@
 
     private Socket client;
 
-    private TaskFactoryInterface taskFactoryInterface;
+    private TaskHandlerInterface taskHandlerInterface;
 
     private int port;
 
     private boolean isStarted = false;
     private boolean isConnected = false;
 
-    public ClientListener(TaskFactoryInterface taskFactoryInterface, int port) {
+    public ClientListener(TaskHandlerInterface taskHandlerInterface, int port) {
         clientsList = Collections.synchronizedList(new ArrayList<>());
-        this.taskFactoryInterface = taskFactoryInterface;
+        this.taskHandlerInterface = taskHandlerInterface;
         this.port = port;
     }
 
@@ -33,21 +32,12 @@
 
             while (true) {
                 client = server.accept();
-                ClientRunnable runnable = new ClientRunnable(client, taskFactoryInterface);
+                ClientRunnable runnable = new ClientRunnable(client, taskHandlerInterface);
                 clientsList.add(runnable);
                 (new Thread(runnable)).start();
             }
-
         } catch (IOException exception) {
             exception.printStackTrace();
         }
     }
-
-    private String readLine(BufferedReader reader) throws IOException {
-        String line = reader.readLine();
-        if(line != null && line.length() > 2 && line.startsWith("\uFEFF"))
-            return line.substring("\uFEFF".length());
-        return line;
-    }
-
 }
\ No newline at end of file
Index: src/main/java/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.infrastructure.json.JsonRepository;\r\nimport org.model.Server;\r\nimport org.repository.DataInterface;\r\nimport org.task.TaskFactory;\r\nimport org.task.TaskList;\r\nimport org.thread.ClientListener;\r\nimport org.thread.MurMurExecutor;\r\n\r\npublic class App {\r\n\r\n    public static void main(String args[]) {\r\n        try(DataInterface dataInterface = new JsonRepository()) {\r\n            Server serverSettings =  dataInterface.getServerSettings();\r\n\r\n            TaskList taskList = new TaskList();\r\n            TaskFactory taskFactory = new TaskFactory(taskList);\r\n\r\n            ClientListener clientListener = new ClientListener(taskFactory, serverSettings.getMulticastPort()); //TODO changer port ?\r\n            (new Thread(clientListener)).start();\r\n            MurMurExecutor murMurExecutor = new MurMurExecutor(taskList, serverSettings);\r\n            (new Thread(murMurExecutor)).start();\r\n\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/App.java b/src/main/java/App.java
--- a/src/main/java/App.java	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ b/src/main/java/App.java	(date 1676240197611)
@@ -1,10 +1,10 @@
 import org.infrastructure.json.JsonRepository;
 import org.model.Server;
 import org.repository.DataInterface;
-import org.task.TaskFactory;
+import org.task.TaskHandler;
 import org.task.TaskList;
 import org.thread.ClientListener;
-import org.thread.MurMurExecutor;
+import org.task.MurMurExecutor;
 
 public class App {
 
@@ -13,9 +13,9 @@
             Server serverSettings =  dataInterface.getServerSettings();
 
             TaskList taskList = new TaskList();
-            TaskFactory taskFactory = new TaskFactory(taskList);
+            TaskHandler taskHandler = new TaskHandler(taskList);
 
-            ClientListener clientListener = new ClientListener(taskFactory, serverSettings.getMulticastPort()); //TODO changer port ?
+            ClientListener clientListener = new ClientListener(taskHandler, serverSettings.getUnicastPort());
             (new Thread(clientListener)).start();
             MurMurExecutor murMurExecutor = new MurMurExecutor(taskList, serverSettings);
             (new Thread(murMurExecutor)).start();
Index: src/main/java/org/model/Server.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.model;\r\n\r\nimport org.model.exceptions.InvalidServerSettingsException;\r\nimport org.model.exceptions.InvalidTagException;\r\nimport org.model.exceptions.InvalidUserException;\r\nimport org.utils.Regexes;\r\n\r\nimport javax.crypto.spec.SecretKeySpec;\r\nimport java.util.List;\r\nimport java.util.regex.Pattern;\r\n\r\n/**\r\n * Classe de stockage des paramètres serveurs et des utilisateurs et tags\r\n */\r\npublic class Server {\r\n    //todo enlever les param serveur si directement assignables  + renommer Server et changer l'ancienne classe serveur ?\r\n    private final String currentDomain;\r\n    private final int saltSizeInBytes;\r\n    private final String multicastAddress;\r\n    private final int multicastPort;\r\n    private final int unicastPort;\r\n    private final int relayPort;\r\n    private final String networkInterface;\r\n    private final SecretKeySpec AESKey;\r\n    private final boolean tls;\r\n    private final List<User> users;\r\n    private final List<Tag> tags;\r\n\r\n    public Server(String currentDomain, int saltSizeInBytes, String multicastAddress, int multicastPort, int unicastPort, int relayPort, String networkInterface, SecretKeySpec AESKey, boolean tls, List<User> users, List<Tag> tags) throws InvalidServerSettingsException {\r\n        checkParameters(currentDomain, saltSizeInBytes, multicastAddress, multicastPort, unicastPort, relayPort, networkInterface, AESKey, tls, users, tags);\r\n\r\n        this.currentDomain = currentDomain;\r\n        this.saltSizeInBytes = saltSizeInBytes;\r\n        this.multicastAddress = multicastAddress;\r\n        this.multicastPort = multicastPort;\r\n        this.unicastPort = unicastPort;\r\n        this.relayPort = relayPort;\r\n        this.networkInterface = networkInterface;\r\n        this.AESKey = AESKey;\r\n        this.tls = tls;\r\n        this.users = users;\r\n        this.tags = tags;\r\n    }\r\n\r\n    private void checkParameters(String currentDomain, int saltSizeInBytes, String multicastAddress, int multicastPort, int unicastPort, int relayPort, String networkInterface, SecretKeySpec aesKey, boolean tls, List<User> users, List<Tag> tags) throws InvalidServerSettingsException{\r\n        //todo verifier networkInterface ?\r\n        if(!Pattern.matches(Regexes.DOMAIN, currentDomain) ||\r\n                !Pattern.matches(Regexes.ROUND_OR_SALT_SIZE, String.valueOf(saltSizeInBytes)) ||\r\n                !Pattern.matches(Regexes.ADDRESS, multicastAddress) ||\r\n                !Pattern.matches(Regexes.PORT, String.valueOf(multicastPort)) ||\r\n                !Pattern.matches(Regexes.PORT, String.valueOf(unicastPort)) ||\r\n                !Pattern.matches(Regexes.PORT, String.valueOf(relayPort)))\r\n        {\r\n            throw new InvalidServerSettingsException(\"Valeurs paramètres serveur invalides\");\r\n        }\r\n    }\r\n\r\n\r\n    //GETTERS\r\n\r\n    /**\r\n     * Récupère le nom de domaine du serveur\r\n     * @return (String)\r\n     */\r\n    public String getCurrentDomain() {\r\n        return currentDomain;\r\n    }\r\n\r\n    /**\r\n     * Récupère la taille de Salt\r\n     * @return\r\n     */\r\n    public int getSaltSizeInBytes() {\r\n        return saltSizeInBytes;\r\n    }\r\n\r\n    /**\r\n     * Récupère l'adresse de multicast\r\n     * @return\r\n     */\r\n    public String getMulticastAddress() {\r\n        return multicastAddress;\r\n    }\r\n\r\n    /**\r\n     * Récupère le port multicast\r\n     * @return (int)\r\n     */\r\n    public int getMulticastPort() {\r\n        return multicastPort;\r\n    }\r\n\r\n    /**\r\n     * Récupère le port unicast\r\n     * @return (int)\r\n     */\r\n    public int getUnicastPort() {\r\n        return unicastPort;\r\n    }\r\n\r\n    /**\r\n     * Récupère le port du relai\r\n     * @return (int)\r\n     */\r\n    public int getRelayPort() {\r\n        return relayPort;\r\n    }\r\n\r\n    /**\r\n     * Récupère l'interface réseaux à utiliser\r\n     * @return (String)\r\n     */\r\n    public String getNetworkInterface() {\r\n        return networkInterface;\r\n    }\r\n\r\n    /**\r\n     * Récupère la clé AES en base 64\r\n     * @return (String)\r\n     */\r\n    public SecretKeySpec getAESKey() {\r\n        return AESKey;\r\n    }\r\n\r\n    /**\r\n     * Récupère la valeur Tls\r\n     * @return (boolean)\r\n     */\r\n    public boolean isTls() {\r\n        return tls;\r\n    }\r\n\r\n    /**\r\n     * Récupère la liste des utilisateurs DTO\r\n     * @return (UserDTO)\r\n     */\r\n    public List<User> getUsers() {\r\n        return users;\r\n    }\r\n\r\n    /**\r\n     * Récupère la liste des tags DTO\r\n     * @return (TagDTO)\r\n     */\r\n    public List<Tag> getTags() {\r\n        return tags;\r\n    }\r\n\r\n\r\n    //SETTERS\r\n\r\n    //USERS\r\n    /**\r\n     * Ajoute un utilisateur à la liste des utilisateurs du serveur\r\n     * @param user (User) utilisateur\r\n     */\r\n    public void addUser(User user) {\r\n        users.add(user);\r\n    }\r\n\r\n    /**\r\n     * Ajoute un follower à un utilisateur du serveur   !peut changer\r\n     * @param user (User) utilisateur de la liste des utilisateurs du serveur\r\n     * @param follower (String) follower@domaine\r\n     * @throws InvalidUserException Exception lancée si le champ follower ne respecte pas la syntaxe\r\n     */\r\n    public void addFollowerToUser(User user, String follower) throws InvalidUserException {\r\n        user.addFollower(follower);\r\n    }\r\n\r\n    /**\r\n     * Ajoute un follower à un utilisateur du serveur   !peut changer\r\n     * @param user (User) utilisateur de la liste des utilisateurs du serveur\r\n     * @param tag (String) tag@domaine\r\n     * @throws InvalidUserException Exception lancée si le champ tag ne respecte pas la syntaxe\r\n     */\r\n    public void addUserTagToUser(User user, String tag) throws InvalidUserException {\r\n        user.addUserTag(tag);\r\n    }\r\n\r\n\r\n    //TAGS\r\n    /**\r\n     * Ajoute un tag à la liste des tags du serveur\r\n     * @param tag (Tag) tag\r\n     */\r\n    public void addTag(Tag tag) {\r\n        tags.add(tag);\r\n    }\r\n\r\n    /**\r\n     * Ajoute un follower à un tag du serveur   !peut changer\r\n     * @param tag (Tag) tag de la liste des tags du serveur\r\n     * @param follower (String) follower@domaine\r\n     * @throws InvalidTagException Exception lancée si le champ follower ne respecte pas la syntaxe\r\n     */\r\n    public void addFollowerToTag(Tag tag, String follower) throws InvalidTagException {\r\n        tag.addFollower(follower);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/model/Server.java b/src/main/java/org/model/Server.java
--- a/src/main/java/org/model/Server.java	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ b/src/main/java/org/model/Server.java	(date 1676243381524)
@@ -154,8 +154,18 @@
      * Ajoute un utilisateur à la liste des utilisateurs du serveur
      * @param user (User) utilisateur
      */
-    public void addUser(User user) {
-        users.add(user);
+    public void addUser(User user) throws InvalidUserException{
+        if (userExist(user)) users.add(user);
+        else throw new InvalidUserException("L'utilisateur est déjà existant");
+    }
+
+    /**
+     * Vérifie si l'utilisateur est déjà un compte connu
+     * @param user le compte
+     * @return vrai s'il l'utilisateur est existant
+     */
+    private boolean userExist(User user) {
+        return users.contains(user);
     }
 
     /**
Index: src/main/java/org/thread/TaskListInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/thread/TaskListInterface.java b/src/main/java/org/thread/TaskHandlerInterface.java
rename from src/main/java/org/thread/TaskListInterface.java
rename to src/main/java/org/thread/TaskHandlerInterface.java
--- a/src/main/java/org/thread/TaskListInterface.java	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ b/src/main/java/org/thread/TaskHandlerInterface.java	(date 1676243685879)
@@ -1,17 +1,15 @@
 package org.thread;
 
-import org.model.Task;
+import java.io.PrintWriter;
 
 /**
  * Interface TaskList
  * Permet de récupérer les taches à exécuter
  */
-public interface TaskListInterface {
-
+public interface TaskHandlerInterface {
     /**
      * Cette méthode permet de récupérer la tache suivante à exécuter
      * @return Task retourne null si plus de tache à exécuter
      */
-    Task getTask();
-
+     void processTask(String line, PrintWriter destination);
 }
Index: src/main/java/org/thread/TaskFactoryInterface.java
===================================================================
diff --git a/src/main/java/org/thread/TaskFactoryInterface.java b/src/main/java/org/thread/TaskFactoryInterface.java
deleted file mode 100644
--- a/src/main/java/org/thread/TaskFactoryInterface.java	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ /dev/null	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
@@ -1,17 +0,0 @@
-package org.thread;
-
-/**
- * Interface TaskFactory
- * Permet de créer des taches
- */
-public interface TaskFactoryInterface {
-
-    /**
-     * Crée une nouvelle tache et la met dans la queue
-     * @param typeSended (String)
-     * @param source (String)
-     * @param destination (String)
-     */
-    void createTask(String typeSended, String source, String destination);
-
-}
Index: src/main/java/org/thread/ClientRunnable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.thread;\r\n\r\nimport org.utils.Queries;\r\nimport org.utils.RandomStringUtil;\r\nimport org.utils.Regexes;\r\n\r\nimport java.io.*;\r\nimport java.net.Socket;\r\nimport java.nio.charset.StandardCharsets;\r\n\r\npublic class ClientRunnable implements Runnable {\r\n    private static final int SIZE = 22;\r\n    private final Socket client;\r\n    private BufferedReader in;\r\n    private PrintWriter out;\r\n    private final TaskFactoryInterface taskFactoryInterface;\r\n\r\n    public ClientRunnable (Socket client, TaskFactoryInterface taskFactoryInterface) {\r\n        this.client = client;\r\n        this.taskFactoryInterface = taskFactoryInterface;\r\n\r\n        try {\r\n            in = new BufferedReader(new InputStreamReader(client.getInputStream(), StandardCharsets.UTF_8));\r\n            out = new PrintWriter(new OutputStreamWriter(client.getOutputStream(), StandardCharsets.UTF_8), true);\r\n            String key = RandomStringUtil.generateString(SIZE);\r\n            sendMessage(String.format(Queries.HELLO, \"localhost\", key));\r\n        } catch (IOException ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n    @Override\r\n    public void run() {\r\n        try {\r\n            String line;\r\n            do {\r\n                line = in.readLine();\r\n\r\n                Regexes.decomposeRegister(line);\r\n                Regexes.decomposeConnect(line);\r\n            } while (line != null);\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n    }\r\n    private void sendMessage(String message) {\r\n        out.println(message);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/thread/ClientRunnable.java b/src/main/java/org/thread/ClientRunnable.java
--- a/src/main/java/org/thread/ClientRunnable.java	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ b/src/main/java/org/thread/ClientRunnable.java	(date 1676243700077)
@@ -1,29 +1,24 @@
 package org.thread;
 
-import org.utils.Queries;
-import org.utils.RandomStringUtil;
-import org.utils.Regexes;
-
 import java.io.*;
 import java.net.Socket;
 import java.nio.charset.StandardCharsets;
 
 public class ClientRunnable implements Runnable {
-    private static final int SIZE = 22;
+
     private final Socket client;
     private BufferedReader in;
     private PrintWriter out;
-    private final TaskFactoryInterface taskFactoryInterface;
+    private final TaskHandlerInterface taskHandlerInterface;
 
-    public ClientRunnable (Socket client, TaskFactoryInterface taskFactoryInterface) {
+    public ClientRunnable (Socket client, TaskHandlerInterface taskHandlerInterface) {
         this.client = client;
-        this.taskFactoryInterface = taskFactoryInterface;
+        this.taskHandlerInterface = taskHandlerInterface;
 
         try {
             in = new BufferedReader(new InputStreamReader(client.getInputStream(), StandardCharsets.UTF_8));
             out = new PrintWriter(new OutputStreamWriter(client.getOutputStream(), StandardCharsets.UTF_8), true);
-            String key = RandomStringUtil.generateString(SIZE);
-            sendMessage(String.format(Queries.HELLO, "localhost", key));
+            taskHandlerInterface.processTask("", out);
         } catch (IOException ex) {
             ex.printStackTrace();
         }
@@ -35,15 +30,10 @@
             do {
                 line = in.readLine();
 
-                Regexes.decomposeRegister(line);
-                Regexes.decomposeConnect(line);
+                taskHandlerInterface.processTask(line, out);
             } while (line != null);
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
-
-    }
-    private void sendMessage(String message) {
-        out.println(message);
     }
 }
Index: src/main/java/org/thread/MurMurExecutor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/thread/MurMurExecutor.java b/src/main/java/org/task/MurMurExecutor.java
rename from src/main/java/org/thread/MurMurExecutor.java
rename to src/main/java/org/task/MurMurExecutor.java
--- a/src/main/java/org/thread/MurMurExecutor.java	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ b/src/main/java/org/task/MurMurExecutor.java	(date 1676239431161)
@@ -1,35 +1,45 @@
-package org.thread;
+package org.task;
 
 import org.model.Server;
 import org.model.Task;
-import org.task.TaskList;
+import org.utils.Queries;
+import org.utils.RandomStringUtil;
 
 /**
  * Cette classe permet de créer un thread qui va exécuter les taches
  */
 public class MurMurExecutor implements Runnable{
-    private final TaskListInterface taskListInterface;
-
+    private static final int SIZE = 22;
+    private final TaskList taskListInterface;
     private final Server server;
 
     /**
      * Constructeur de la classe MurMurExecutor qui prend en paramètre une liste de taches
      * @param taskListInterface (TaskListInterface)
      */
-    public MurMurExecutor(TaskListInterface taskListInterface, Server server) {
+    public MurMurExecutor(TaskList taskListInterface, Server server) {
         this.taskListInterface = taskListInterface;
         this.server = server;
     }
 
     @Override
     public void run() {
-        //TODO executer les taches si les taches ne sont pas null
         while (true){
             Task task = taskListInterface.getTask();
             if (task != null){
-                task.execute();
+                execute(task);
             }
         }
     }
+    private void execute(Task task) {
+        switch(task.getType()) {
+            case "HELLO":
+                String key = RandomStringUtil.generateString(SIZE);
+                task.getDestination().println(String.format(Queries.HELLO, server.getCurrentDomain(), key));
+                break;
+            case "OK":
 
+                break;
+        }
+    }
 }
Index: src/main/java/org/model/Task.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.model;\r\n\r\n/**\r\n * Interface Task qui permet de récupérer le type de la tache et de l'exécuter\r\n */\r\npublic class Task {\r\n    private int id;\r\n    private String type;\r\n    private String source;\r\n    private String destination;\r\n    private String status;\r\n    public Task(int id, String type, String source, String destination, String status) {\r\n        this.id = id;\r\n        this.type = type;\r\n        this.source = source;\r\n        this.destination = destination;\r\n        this.status = status;\r\n    }\r\n\r\n    /**\r\n     * Cette méthode permet de récupérer le type de la tache\r\n     * @return le type de la tâche\r\n     */\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    /**\r\n     * Cette méthode retourne les informations de transit de la tâches\r\n     * @return un array source-> destination de la tâche\r\n     */\r\n    public String[] getTransitInfos() {\r\n        return new String[] { source, destination };\r\n    }\r\n\r\n    /**\r\n     * Cette méthode permet d'exécuter la tache\r\n     */\r\n    public void execute() {\r\n\r\n    }\r\n\r\n    public enum Types {\r\n        \r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/model/Task.java b/src/main/java/org/model/Task.java
--- a/src/main/java/org/model/Task.java	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ b/src/main/java/org/model/Task.java	(date 1676238515511)
@@ -1,5 +1,7 @@
 package org.model;
 
+import java.io.PrintWriter;
+
 /**
  * Interface Task qui permet de récupérer le type de la tache et de l'exécuter
  */
@@ -7,9 +9,9 @@
     private int id;
     private String type;
     private String source;
-    private String destination;
+    private PrintWriter destination;
     private String status;
-    public Task(int id, String type, String source, String destination, String status) {
+    public Task(int id, String type, String source, PrintWriter destination,String command, String status) {
         this.id = id;
         this.type = type;
         this.source = source;
@@ -25,22 +27,7 @@
         return type;
     }
 
-    /**
-     * Cette méthode retourne les informations de transit de la tâches
-     * @return un array source-> destination de la tâche
-     */
-    public String[] getTransitInfos() {
-        return new String[] { source, destination };
-    }
-
-    /**
-     * Cette méthode permet d'exécuter la tache
-     */
-    public void execute() {
-
-    }
-
-    public enum Types {
-        
+    public PrintWriter getDestination() {
+        return destination;
     }
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ab850b7d-9958-4306-b322-8904c1cf1411\" name=\"Changes\" comment=\"HELLO &amp; REGISTER\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ressources/NetChooser.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ressources/NetChooser.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/thread/ClientRunnable.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/thread/ClientRunnable.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/utils/RandomStringUtil.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/utils/RandomStringUtil.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeInsightWorkspaceSettings\">\r\n    <option name=\"optimizeImportsOnTheFly\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"MurMurProject\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"dev_samuel\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"dev\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2LSwvMEIegRziuKAn4a39SFF2Mv\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\alexi\\OneDrive\\Documents\\HELMo\\Reseau\\Projet\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"org.model\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.App\">\r\n    <configuration name=\"App\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"App\" />\r\n      <module name=\"MurMurProject.main\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Server\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.server.Server\" />\r\n      <module name=\"MurMurProject.main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.server.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MurMurProject [dependencies]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"dependencies\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.App\" />\r\n        <item itemvalue=\"Gradle.MurMurProject [dependencies]\" />\r\n        <item itemvalue=\"Application.Server\" />\r\n        <item itemvalue=\"Application.Server\" />\r\n        <item itemvalue=\"Application.Server\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ab850b7d-9958-4306-b322-8904c1cf1411\" name=\"Changes\" comment=\"\" />\r\n      <created>1675878023626</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1675878023626</updated>\r\n      <workItem from=\"1675878025044\" duration=\"810000\" />\r\n      <workItem from=\"1675878852570\" duration=\"1110000\" />\r\n      <workItem from=\"1675880152509\" duration=\"2788000\" />\r\n      <workItem from=\"1675889009407\" duration=\"4179000\" />\r\n      <workItem from=\"1675893937599\" duration=\"1441000\" />\r\n      <workItem from=\"1675935351703\" duration=\"446000\" />\r\n      <workItem from=\"1676029713422\" duration=\"2641000\" />\r\n      <workItem from=\"1676034781217\" duration=\"10301000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"First commit\">\r\n      <created>1675878157831</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675878157831</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Ajout serveur\">\r\n      <created>1675878612214</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675878612214</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Ajout de la liste de taches (TaskList) et du MurMurExecutor\">\r\n      <created>1675895152326</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675895152326</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Ajout des taches MsgsMessageTask et SendMessageTask\">\r\n      <created>1675895391728</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675895391728</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Task class\">\r\n      <created>1676024914576</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676024914576</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Avancement tasks\">\r\n      <created>1676025976616</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676025976616</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Avancement 2 tasks\">\r\n      <created>1676028575422</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676028575422</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Ajout App\">\r\n      <created>1676036480663</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676036480663</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Changement server\">\r\n      <created>1676040144189</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676040144189</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"HELLO &amp; REGISTER\">\r\n      <created>1676041412377</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676041412377</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"11\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"First commit\" />\r\n    <MESSAGE value=\"Ajout serveur\" />\r\n    <MESSAGE value=\"Ajout de la liste de taches (TaskList) et du MurMurExecutor\" />\r\n    <MESSAGE value=\"Ajout des taches MsgsMessageTask et SendMessageTask\" />\r\n    <MESSAGE value=\"Task class\" />\r\n    <MESSAGE value=\"Avancement tasks\" />\r\n    <MESSAGE value=\"Avancement 2 tasks\" />\r\n    <MESSAGE value=\"Ajout App\" />\r\n    <MESSAGE value=\"Changement server\" />\r\n    <MESSAGE value=\"HELLO &amp; REGISTER\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"HELLO &amp; REGISTER\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ b/.idea/workspace.xml	(date 1676243703438)
@@ -4,11 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ab850b7d-9958-4306-b322-8904c1cf1411" name="Changes" comment="HELLO &amp; REGISTER">
+    <list default="true" id="ab850b7d-9958-4306-b322-8904c1cf1411" name="Changes" comment="update #1">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ressources/NetChooser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ressources/NetChooser.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/App.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/App.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/model/Server.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/model/Server.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/model/Task.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/model/Task.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/task/TaskFactory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/task/TaskHandler.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/task/TaskList.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/task/TaskList.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/thread/ClientListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/thread/ClientListener.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/thread/ClientRunnable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/thread/ClientRunnable.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/utils/RandomStringUtil.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/utils/RandomStringUtil.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/thread/MurMurExecutor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/task/MurMurExecutor.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/thread/TaskFactoryInterface.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/thread/TaskListInterface.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/thread/TaskHandlerInterface.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -81,19 +88,19 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "WebServerToolWindowFactoryState": "false",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "project.structure.last.edited": "Modules",
-    "project.structure.proportion": "0.0",
-    "project.structure.side.proportion": "0.0",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\alexi\OneDrive\Documents\HELMo\Reseau\Projet" />
@@ -169,7 +176,9 @@
       <workItem from="1675893937599" duration="1441000" />
       <workItem from="1675935351703" duration="446000" />
       <workItem from="1676029713422" duration="2641000" />
-      <workItem from="1676034781217" duration="10301000" />
+      <workItem from="1676034781217" duration="10387000" />
+      <workItem from="1676074462868" duration="973000" />
+      <workItem from="1676232231026" duration="11378000" />
     </task>
     <task id="LOCAL-00001" summary="First commit">
       <created>1675878157831</created>
@@ -241,7 +250,14 @@
       <option name="project" value="LOCAL" />
       <updated>1676041412377</updated>
     </task>
-    <option name="localTasksCounter" value="11" />
+    <task id="LOCAL-00011" summary="update #1">
+      <created>1676046247763</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1676046247763</updated>
+    </task>
+    <option name="localTasksCounter" value="12" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -269,6 +285,7 @@
     <MESSAGE value="Ajout App" />
     <MESSAGE value="Changement server" />
     <MESSAGE value="HELLO &amp; REGISTER" />
-    <option name="LAST_COMMIT_MESSAGE" value="HELLO &amp; REGISTER" />
+    <MESSAGE value="update #1" />
+    <option name="LAST_COMMIT_MESSAGE" value="update #1" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/org/task/TaskFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/task/TaskFactory.java b/src/main/java/org/task/TaskHandler.java
rename from src/main/java/org/task/TaskFactory.java
rename to src/main/java/org/task/TaskHandler.java
--- a/src/main/java/org/task/TaskFactory.java	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ b/src/main/java/org/task/TaskHandler.java	(date 1676243645129)
@@ -1,15 +1,22 @@
 package org.task;
 
 import org.model.Task;
-import org.thread.TaskFactoryInterface;
+import org.model.User;
+import org.model.exceptions.InvalidUserException;
+import org.thread.TaskHandlerInterface;
+import org.utils.Regexes;
 
-public class TaskFactory implements TaskFactoryInterface {
+import java.io.PrintWriter;
+import java.util.ArrayList;
+import java.util.Map;
+
+public class TaskHandler implements TaskHandlerInterface {
     private int idCount;
 
     private TaskList taskList;
     private Task task;
 
-    public TaskFactory(TaskList taskList) {
+    public TaskHandler(TaskList taskList) {
         this.taskList = taskList;
     }
 
@@ -21,11 +28,32 @@
      * @param source (String)
      * @param destination (String)
      */
-    public void createTask(String typeSended, String source, String destination) {
-        switch(typeSended) {
+    public synchronized void processTask(String line, PrintWriter destination) {
+        Map<String, String> commandInfos = Regexes.decomposeCommand(line);
+        selectTask(commandInfos);
+        taskList.addTask(new Task(++idCount, typeSended, source, destination, command, "pending"));
+    }
+
+    /**
+     * Détermine quelle tâche il faut crée en fonction de la commande
+     * @param commandLine Map<String, String> la commande
+     */
+    private void selectTask(Map<String, String> commandLine) {
+        String type = commandLine.get("type");
+        switch(type) {
+            case "REGISTER":
+                //TODO savoir pour le bcrypt salt
+                try {
+                    new User(commandLine.get("username"), Integer.parseInt(commandLine.get("bcryptround")),
+                            commandLine.get("bcryptsalt"), commandLine.get("bcrypthash"), new ArrayList<String>(),
+                            new ArrayList<>(), 0);
+
+                } catch (InvalidUserException ex) {
 
+                }
+                break;
+            case "CONNECT":
+                break;
         }
-        taskList.addTask(new Task(++idCount, typeSended, source, destination, "pending"));
     }
-
 }
Index: src/main/java/org/task/TaskList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.task;\r\n\r\nimport org.model.Task;\r\nimport org.thread.TaskListInterface;\r\n\r\nimport java.util.Queue;\r\nimport java.util.concurrent.LinkedBlockingDeque;\r\n\r\n/**\r\n * Cette classe permet de créer une liste de taches\r\n * elle permet de créer des taches\r\n * elle permet de récupérer la tache suivante à exécuter à l'aide de la méthode getTask()\r\n */\r\npublic class TaskList implements TaskListInterface {\r\n    private final Queue<Task> tasks;\r\n\r\n    /**\r\n     * Constructeur de la classe TaskList qui pour le moment ne prend rien en paramètres\r\n     */\r\n    public TaskList() {\r\n        tasks = new LinkedBlockingDeque<>();\r\n    }\r\n\r\n    /**\r\n     * Cette méthode permet de créer une tache\r\n     * et de l'ajouter à la liste de taches\r\n     * @param task (Task) tache\r\n     */\r\n    public void addTask(Task task) {\r\n         tasks.add(task); //TODO offer() ?\r\n    }\r\n\r\n    /**\r\n     * Cette méthode permet de récupérer la tache suivante à exécuter\r\n     * à l'aide du poll() qui va récupérer la tache et la retirer de la queue\r\n     * @return Task retourne null si la queue est vide\r\n     */\r\n    @Override\r\n    public Task getTask() {\r\n        return tasks.poll();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/task/TaskList.java b/src/main/java/org/task/TaskList.java
--- a/src/main/java/org/task/TaskList.java	(revision 8f5d2ea16e6f4f6f0693bc849595c0d66f868950)
+++ b/src/main/java/org/task/TaskList.java	(date 1676238921245)
@@ -1,7 +1,6 @@
 package org.task;
 
 import org.model.Task;
-import org.thread.TaskListInterface;
 
 import java.util.Queue;
 import java.util.concurrent.LinkedBlockingDeque;
@@ -11,7 +10,7 @@
  * elle permet de créer des taches
  * elle permet de récupérer la tache suivante à exécuter à l'aide de la méthode getTask()
  */
-public class TaskList implements TaskListInterface {
+public class TaskList {
     private final Queue<Task> tasks;
 
     /**
@@ -35,10 +34,7 @@
      * à l'aide du poll() qui va récupérer la tache et la retirer de la queue
      * @return Task retourne null si la queue est vide
      */
-    @Override
     public Task getTask() {
         return tasks.poll();
     }
-
-
 }
